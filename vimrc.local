" General Settings
" ==============================================================================

" Leader key
let mapleader = ","

" Disable line wrapping
set nowrap

" Indention options
set autoindent
set smartindent

" 2 character soft tabs
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Hard wrap
set textwidth=80

" Set format options to auto wrap text and understand numbering
set formatoptions=tcqn

" Make the 'cw' and like commands put a $ at the end instead of just deleting
" the text and replacing it
set cpoptions=Bces$

if has("gui_running")
  set guioptions-=rL

  if has("unix") && match(system("uname"),'Darwin') != -1
    set guifont=Monaco:h12
  end
end

" Plug-in Settings
" ==============================================================================

" NERDTree
" ========
noremap <silent> <Leader>n :NERDTreeToggle<CR>
noremap <silent> <Leader><Leader> :NERDTreeFind<CR>

" NERDcommenter
" =============
" Add a space before comments
let NERDSpaceDelims = 1
" Comment all the lines selected
let NERDBlockComIgnoreEmpty = 0
" Disable default mappings
let NERDCreateDefaultMappings = 0

vmap <silent> <D-/> :call NERDComment(1, "toggle")<CR>
nmap <silent> <D-/> :call NERDComment(0, "toggle")<CR>

" LaTeX
" =====
" View program for OSX
if has("unix") && match(system("uname"),'Darwin') != -1
  let g:Tex_ViewRule_pdf = 'open -a Skim.app'
end

" No default foldings
let g:Tex_FoldedSections = ''
let g:Tex_FoldedEnvironments = ''
let g:Tex_FoldedCommands = ''

" remap to avoid collision with <C-j> mapping
imap <C-g> <Plug>IMAP_JumpForward
nmap <C-g> <Plug>IMAP_JumpForward

" Ctrl-P
" ======
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_map = '<leader>f'

nmap <silent> <Leader>b :CtrlPBuffer<CR>

" Syntastic syntax checking
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=1


" Custom File Types
" ==============================================================================

au BufNewFile,BufRead *.lfjs set filetype=lisp
au BufRead,BufNewFile *.hamljs set filetype=haml
au BufRead,BufNewFile *.ypp set filetype=yacc
au! BufRead,BufNewFile *.ll set filetype=llvm
au! BufRead,BufNewFile *.cljs set filetype=clojure

" General Key Bindings
" ==============================================================================

" Maps to make handling windows a bit easier
" map <silent> <Leader>o :wincmd o<CR>
" map <silent> <Leader>h :wincmd h<CR>
" map <silent> <Leader>j :wincmd j<CR>
" map <silent> <Leader>k :wincmd k<CR>
" map <silent> <Leader>l :wincmd l<CR>
" map <silent> <Leader>sb :wincmd p<CR>
map <silent> <C-h> :vertical resize -10<CR>
map <silent> <C-l> :vertical resize +10<CR>
map <silent> <C-j> :resize +10<CR>
map <silent> <C-k> :resize -10<CR>
map <silent> <Leader>cj :wincmd j<CR>:close<CR>
map <silent> <Leader>ck :wincmd k<CR>:close<CR>
map <silent> <Leader>ch :wincmd h<CR>:close<CR>
map <silent> <Leader>cl :wincmd l<CR>:close<CR>
" map <silent> <Leader>cc :close<CR>
map <silent> <Leader>cw :cclose<CR>
" map <silent> <Leader>ml <C-W>L
" map <silent> <Leader>mk <C-W>K
" map <silent> <Leader>mh <C-W>H
" map <silent> <Leader>mj <C-W>J

" Resize frame
map <silent> <C-Left> :set columns-=10<CR>
map <silent> <C-Right> :set columns+=10<CR>
map <silent> <C-Up> :set lines-=10<CR>
map <silent> <C-Down> :set lines+=10<CR>

" Remap Q to format instead of Ex mode
map Q gq

" Clear search
nmap <silent><CR> :noh<CR><CR>

" TextMate style indention commands
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv

" Run test under cursor
nmap <silent> <Leader>r :w<CR>V:Rake<CR>

" Opens an edit command with the path of the currently edited file filled in
" Normal mode: <Leader>e
map <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

" Inserts the path of the currently edited file into a command
" Command mode: Ctrl+P
cmap <C-P> <C-R>=expand("%:p:h") . "/" <CR>

" Navigate back and forth in command
cmap <C-b> <Left>
cmap <C-f> <Right>

nmap <Up> <nop>
nmap <Down> <nop>
nmap <Left> <nop>
nmap <Right> <nop>

" Unmap command mappings set by plugins
cmapclear
